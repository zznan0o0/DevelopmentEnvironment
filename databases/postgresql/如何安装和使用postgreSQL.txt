
如何安装和使用postgreSQL


mysql -u 用户名 -h 主机地址 -P 端口号 数据库名 -p
psql  -U 用户名 -h 主机地址 -p 端口号 数据库名
psql  -U 用户名 -h 主机地址 -p 端口号 -d 数据库名


操作对比：
======================================
mysql                     psql
======================================
SHOW DATABASES;           \l
USE db-name;              \c db-name
SHOW TABLES;              \d
SHOW USERS;               \du
SHOW COLUMNS;             \d table-name
SHOW PROCESSLIST;         SELECT * FROM pg_stat_activity;
SELECT now()\G            \x 可以打开和关闭类似\G功能
SOURCE /path.sql          \i /path.sql
LOAD DATA INFILE ...      \copy ...
\h                        \?
======================================


写入json数据：
==============================
CREATE TABLE books ( id integer, data json );
INSERT INTO books VALUES (1, '{ "name": "Book the First", "author": { "first_name": "Bob", "last_name": "White" } }');
INSERT INTO books VALUES (2, '{ "name": "Book the Second", "author": { "first_name": "Charles", "last_name": "Xavier" } }');
INSERT INTO books VALUES (3, '{ "name": "Book the Third", "author": { "first_name": "Jim", "last_name": "Brown" } }');
SELECT id, data->>'name' AS name FROM books;
SELECT id, data->'author'->>'first_name' as author_first_name FROM books;
SELECT * FROM books WHERE data->>'name' = 'Book the First';
SELECT * FROM books WHERE data->'author'->>'first_name' = 'Charles';
CREATE UNIQUE INDEX books_author_first_name ON books ((data->'author'->>'first_name'));
select handle, ownerHandle, vertices->0->>'x' as ver_x from tb_raw_entities where type='LWPOLYLINE'  limit 5;


安装PostgreSQL:
==============================
cd /etc/apt/sources.list.d/
sudo vim pgdg.list(没有文件需要新建个文)
在文件中加上这么一行：
deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main

wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sudo apt-get update
sudo apt-get install postgresql-10

添加DB用户：
==============================
sudo adduser dbuser



配置postgres:
==============================
用postgres用户登录：
sudo su - postgres

登录PostgreSQL:
psql

第一件事是使用\password命令，为postgres用户设置一个密码。(密码是postgres)
\password postgres

第二件事是创建数据库用户dbuser（刚才创建的是Linux系统用户），并设置密码。
CREATE USER dbuser WITH PASSWORD 'password';
CREATE USER dbuser WITH PASSWORD 'dbuser';

第三件事是创建数据库，这里为exampledb，并指定所有者为dbuser。
CREATE DATABASE exampledb OWNER dbuser;

第四件事是将exampledb数据库的所有权限都赋予dbuser，否则dbuser只能登录控制台，没有任何数据库操作权限。
GRANT ALL PRIVILEGES ON DATABASE exampledb to dbuser;

最后，使用\q命令退出控制台（也可以直接按ctrl+D）。
\q



使用PostgreSQL:
===============================
psql -U dbuser -d exampledb -h 127.0.0.1 -p 5432
上面命令的参数含义如下：-U指定用户，-d指定数据库，-h指定服务器，-p指定端口。

查看所有库：\l（再退到当前数据库页面按下Esc然后按两次q键就可以了。第二方法\q回车键就可以退出）
查看所有表： \dt
查看某个表的结构： \d 表名
\password命令 设置密码
\q命令 退出
\h：查看SQL命令的解释，例如 \h select
\?：查看psql命令列表。
\l：列出所有数据库。
\c [database_name]：连接其他数据库。
\d：列出当前数据库的所有表格。
\d [table_name]：列出某一张表格的结构。
\du：列出所有用户。
\e：打开文本编辑器。
\conninfo：列出当前数据库和连接的信息。
\q命令退出控制台（也可以直接按ctrl+D）

# 创建新表 
CREATE TABLE user_tb(name VARCHAR(20), signup_date DATE);

# 插入数据 
INSERT INTO user_tb(name, signup_date) VALUES('张三', '2013-12-22');

# 选择记录 
SELECT * FROM user_tb;

# 更新数据 
UPDATE user_tb set name = '李四' WHERE name = '张三';

# 删除记录 
DELETE FROM user_tb WHERE name = '李四' ;

# 添加栏位 
ALTER TABLE user_tb ADD email VARCHAR(40);

# 更新结构 
ALTER TABLE user_tb ALTER COLUMN signup_date SET NOT NULL;

# 更名栏位 
ALTER TABLE user_tb RENAME COLUMN signup_date TO signup;

# 删除栏位 
ALTER TABLE user_tb DROP COLUMN email;

# 表格更名 
ALTER TABLE user_tb RENAME TO backup_tb;

# 删除表格 
DROP TABLE IF EXISTS backup_tb;


1,查看数据库
playboy=> \l                       //\加上字母l,相当于mysql的，mysql> show databases;  
playboy=> select pg_database_size('playboy');    //查看playboy数据库的大小  
playboy=> select pg_database.datname, pg_database_size(pg_database.datname) AS size from pg_database;    //查看所有数据库的大小  
playboy=> select pg_size_pretty(pg_database_size('playboy'));      //以KB，MB，GB的方式来查看数据库大小  

2，查看多表
playboy=> \dt                      //相当于mysql的，mysql> show tables;  

3，查看单表
playboy=> \d test;                 //相当于mysql的，mysql> desc test;  
playboy=> select pg_relation_size('test');   //查看表大小  
playboy=> select pg_size_pretty(pg_relation_size('test'));   //以KB，MB，GB的方式来查看表大小  
playboy=> select pg_size_pretty(pg_total_relation_size('test'));   //查看表的总大小，包括索引大小  

4，查看索引
playboy=> \di                      //相当于mysql的，mysql> show index from test;  
playboy=> select pg_size_pretty(pg_relation_size('playboy_id_pk'));    //查看索大小  

5，查看表空间，以及大小
playboy=> select spcname from pg_tablespace;         //查看所有表空间  
playboy=> select pg_size_pretty(pg_tablespace_size('pg_default'));   //查看表空间大小  



备份数据库：
==============================
1.导出数据库：
方式一：pg_dump  -U  postgres  -f  c:\db.sql postgis
方式二：pg_dump  -U postgres  postgis > c:\db.sql



2.导入数据库：方式一：psql  -d  databases  -f  c:\db.sql  postgres
3.导出具体表：方式一：pg_dump -Upostgres -t mytable -f  dump.sql  postgres
4.导入具体表：方式一：psql  -d  databases  -f  c:\ dump.sql postgres
databases:数据库名字
postgres：用户名字


Python3操作PostgreSQL:
==============================

首先安装Anaconda，然后通过conda安装python3到postgreSQL的驱动：
~/anaconda3/bin/conda install psycopg2


Python3示例代码：
==============================
import psycopg2

dbname_val = "exampledb"
user_val = "dbuser"
host_val = "localhost"
password_val = "dbuser"
connect_info = "host='%s' dbname='%s' user='%s' password='%s'"
conn = psycopg2.connect(connect_info %(host_val, dbname_val, user_val, password_val))
cursor = conn.cursor()

cursor.execute("select * from user_tb1")
rows = cursor.fetchall()
for row in rows:
    print(row)




